{"ast":null,"code":"var _jsxFileName = \"/Users/joshwest/my-react-project/src/Card.js\",\n  _s = $RefreshSig$();\nimport \"./Card.css\";\nimport { useState } from \"react\";\nimport ABI from \"./contractABI.json\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const [checked, setChecked] = useState(props.done);\n  const toggle = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(\"0x320E01FAB5b31eF456e02eF9CBE768cE5e30652B\", ABI, signer);\n    const toggleContract = await contract.toggleTask(props.id);\n    const receipt = await toggleContract.wait();\n    if (receipt.confirmations > 0) {\n      //if we have more than 0 confirmations...\n      setChecked(!checked);\n      //set the check box to the opposite of what the checkbox currently is\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ToDoItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.Name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: toggle,\n      type: \"checkbox\",\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"AZh2zi8y+mlHWtIzpkjnX7dq2rk=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useState","ABI","ethers","Card","props","checked","setChecked","done","toggle","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","toggleContract","toggleTask","id","receipt","wait","confirmations","Name"],"sources":["/Users/joshwest/my-react-project/src/Card.js"],"sourcesContent":["import \"./Card.css\";\nimport { useState } from \"react\";\nimport ABI from \"./contractABI.json\";\nimport { ethers } from \"ethers\";\n\n\nfunction Card(props) {\n\n    const [checked, setChecked] = useState(props.done)\n\n    const toggle = async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\"0x320E01FAB5b31eF456e02eF9CBE768cE5e30652B\", ABI, signer);\n\n        const toggleContract = await contract.toggleTask(props.id);\n        \n        const receipt = await toggleContract.wait();\n        if (receipt.confirmations > 0) {\n          //if we have more than 0 confirmations...\n            setChecked(!checked);\n            //set the check box to the opposite of what the checkbox currently is\n        }\n        \n\n    }\n\n    return (\n        <div className = \"ToDoItem\">\n            <p>{props.Name} </p>\n            <input onClick={toggle} type=\"checkbox\" checked={checked} />\n        </div>\n    );\n}\n\nexport default Card;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAGhC,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAEjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACG,IAAI,CAAC;EAElD,MAAMC,MAAM,GAAG,YAAY;IACvB,MAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,EAAE;IACnC,MAAMC,QAAQ,GAAG,IAAId,MAAM,CAACe,QAAQ,CAAC,4CAA4C,EAAEhB,GAAG,EAAEa,MAAM,CAAC;IAE/F,MAAMI,cAAc,GAAG,MAAMF,QAAQ,CAACG,UAAU,CAACf,KAAK,CAACgB,EAAE,CAAC;IAE1D,MAAMC,OAAO,GAAG,MAAMH,cAAc,CAACI,IAAI,EAAE;IAC3C,IAAID,OAAO,CAACE,aAAa,GAAG,CAAC,EAAE;MAC7B;MACEjB,UAAU,CAAC,CAACD,OAAO,CAAC;MACpB;IACJ;EAGJ,CAAC;;EAED,oBACI;IAAK,SAAS,EAAG,UAAU;IAAA,wBACvB;MAAA,WAAID,KAAK,CAACoB,IAAI,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACpB;MAAO,OAAO,EAAEhB,MAAO;MAAC,IAAI,EAAC,UAAU;MAAC,OAAO,EAAEH;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEd;AAAC,GA3BQF,IAAI;AAAA,KAAJA,IAAI;AA6Bb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}